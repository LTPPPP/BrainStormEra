@model BrainStormEra.Models.Course

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@Model.CourseName</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Custom CSS -->
    <link rel="stylesheet" href="~/css/Course/CourseDetail.css">
    <link rel="stylesheet" href="~/css/base.css">
    <link rel="stylesheet" href="~/css/HomePage/landing_page.css">
    <link rel="icon" href="~/lib/img/BrainStormEra_logo.png" type="image/x-icon">
</head>
<body>

    @{
        string userRole = Context.Request.Cookies["user_role"];
    }

    <!-- Header -->
    @if (userRole == "2")
    {
        @await Html.PartialAsync("~/Views/Shared/Instructor/Header/_Header.cshtml")
    }
    else if (userRole == "1")
    {
        @await Html.PartialAsync("~/Views/Shared/Admin/Header/_Header.cshtml")
    }
    else if (userRole == "3")
    {
        @await Html.PartialAsync("~/Views/Shared/Learner/Header/_Header.cshtml")
    }
    else
    {
        @await Html.PartialAsync("~/Views/Shared/Header/_Header.cshtml") <!-- Default header for non-logged-in users -->
    }

    <!-- Course Information -->
    <div class="header">
        <div class="container">
            <div class="row py-5">
                <div class="col-md-8">
                    <h1 class="display-4">@Model.CourseName</h1>
                    <p class="lead">@Model.CourseDescription</p>
                    <div class="d-flex mb-2 mt-5">
                        <h3 class="price">$@Model.Price</h3>
                    </div>
                    <div class="d-flex mb-4 mt-2">
                        @if (userRole == "3")
                        {
                            bool isBanned = ViewBag.IsBanned ?? false;
                            bool isEnrolled = ViewBag.IsEnrolled ?? false;
                            if (isBanned)
                            {
                                <div class="alert alert-danger">You have been banned from enrolling in this course.</div>
                            }
                            else if (isEnrolled)
                            {
                                <button class="btn btn-primary" onclick="window.location.href='@Url.Action("ViewLessonLearner", "Lesson")'">Go to Course</button>
                            }
                            else
                            {
                                <form id="enrollForm" method="post" action="@Url.Action("Enroll", "Course")">
                                    <input type="hidden" name="courseId" value="@Model.CourseId" />
                                    <button type="submit" class="btn btn-success">Enroll</button>
                                </form>
                            }
                        }
                        else if (string.IsNullOrEmpty(userRole))
                        {
                            <!-- Enroll button for non-logged-in users -->
                            <button class="btn btn-success" onclick="alert('You need to log in to enroll in this course.');">Enroll</button>
                        }
                    </div>
                    <div class="d-flex text-white mt-3">
                        <div class="me-4">
                            <i class="fas fa-tags me-2"></i> Category:
                            @foreach (var category in ViewBag.CourseCategories as List<string>)
                            {
                                <span class="badge bg-primary me-1">@category</span>
                            }
                        </div>
                        <div class="me-4"><i class="fas fa-users me-2"></i> Students: @ViewBag.LearnersCount</div>
                        <div class="me-4"><i class="fas fa-user me-2"></i> Created by: @ViewBag.CreatedBy</div>
                        <div class="me-4"><i class="fas fa-star me-2"></i> @ViewBag.AverageRating.ToString("0.0") (@ViewBag.TotalComments comments)</div>
                    </div>
                </div>
                <div class="col-md-3">
                    <img src="@Model.CoursePicture" alt="Course Image" class="img-fluid">
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <!-- Navigation Tabs -->
        <nav class="nav nav-pills nav-fill mb-4">
            <a class="nav-link nav-introduction active" href="#introduction">Introduction</a>
            @if (!string.IsNullOrEmpty(userRole))
            {
                <a class="nav-link" href="#curriculum">Content</a>
            }
            <a class="nav-link" href="#rating">Rating</a>
        </nav>

        <!-- Introduction Section -->
        <div class="card mb-4">
            <div class="card-body">
                <h2 id="introduction">Course Description</h2>
                <p>@Model.CourseDescription</p>
            </div>
        </div>

        <!-- Course Content Section (Visible only when logged in) -->
        @if (!string.IsNullOrEmpty(userRole))
        {
            <div class="card mb-4">
                <div class="card-body">
                    <h3 id="curriculum">Course Content</h3>
                    <p>@Model.Chapters.Count Chapters • @ViewBag.TotalLessons Lessons</p>
                    <div class="accordion" id="courseContentAccordion">
                        @foreach (var chapter in Model.Chapters)
                        {
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingChapter@(chapter.ChapterId)">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseChapter@(chapter.ChapterId)" aria-expanded="false" aria-controls="collapseChapter@(chapter.ChapterId)">
                                        @chapter.ChapterName
                                    </button>
                                </h2>
                                <div id="collapseChapter@(chapter.ChapterId)" class="accordion-collapse collapse" aria-labelledby="headingChapter@(chapter.ChapterId)" data-bs-parent="#courseContentAccordion">
                                    <div class="accordion-body">
                                        <ul class="list-group">
                                            @foreach (var lesson in chapter.Lessons)
                                            {
                                                <li class="list-group-item">
                                                    @if (lesson.LessonTypeId == 2)
                                                    {
                                                        <i class="fa-solid fa-book-open"></i> @lesson.LessonName
                                                    }
                                                    else if (lesson.LessonTypeId == 1)
                                                    {
                                                        <i class="fa-regular fa-circle-play"></i> @lesson.LessonName
                                                    }
                                                    else
                                                    {
                                                        <i class="fas fa-file"></i> @lesson.LessonName
                                                    }
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }

        <!-- Rating Section -->
        <div class="card rating-box mb-4">
            <div class="card-body">
                <h3 id="rating">Rating</h3>
                <div class="d-flex align-items-center mb-4">
                    <i class="fas fa-star me-2"></i> @(ViewBag.AverageRating?.ToString("0.0") ?? "0.0") (@(ViewBag.TotalComments ?? 0) comments)
                    <div class="stars ms-3">
                        @for (int i = 1; i <= 5; i++)
                        {
                            <i class="fas fa-star @(i <= (ViewBag.AverageRating ?? 0) ? "selected" : "")"></i>
                        }
                    </div>
                </div>

                <div class="rating-breakdown">
                    @for (int i = 1; i <= 5; i++)
                    {
                        <div class="d-flex align-items-center mb-3">
                            <div class="stars">
                                <i class="fas fa-star @(i <= (ViewBag.AverageRating ?? 0) ? "selected" : "")"></i>
                            </div>
                            <div class="progress flex-fill mx-3">
                                <div class="progress-bar" role="progressbar"
                                     style="width: @(ViewBag.RatingPercentages?.ContainsKey(i) == true ? ViewBag.RatingPercentages[i] * 100 : 0)%"
                                     aria-valuenow="50" aria-valuemin="0" aria-valuemax="100">
                                </div>
                            </div>
                            <div>@(ViewBag.RatingPercentages?.ContainsKey(i) == true ? (ViewBag.RatingPercentages[i] * 100).ToString("0.0") : "0.0")%</div>
                        </div>
                    }
                </div>

            </div>
        </div>

        <!-- Comment Section -->
        <div class="card mb-4">
            <div class="card-body">
                <h3>Comments</h3>
                @if (ViewBag.Comments != null)
                {
                    @foreach (var comment in ViewBag.Comments)
                    {
                        <div class="comment mb-4 d-flex border-bottom pb-3">
                            <div class="avatar bg-secondary rounded-circle me-3" style="width: 40px; height: 40px;"></div>
                            <div class="flex-fill">
                                <div class="d-flex align-items-center">
                                    <div class="fw-bold me-2">@comment.User.FullName</div>
                                    <div class="stars me-3">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="fas fa-star @(i <= (comment.StarRating ?? 0) ? "selected" : "")"></i>
                                        }
                                    </div>
                                </div>
                                <div class="text-muted">@comment.Comment</div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>

        <!-- Feedback Submission Section (Visible only when logged in) -->
        @if (Model.CourseStatus == 2 && !string.IsNullOrEmpty(userRole))
        {
            <div class="card feedback-section mb-4 text-center">
                <div class="card-body">
                    <!-- Feedback Form Content -->
                    <img alt="Robot image" src="" class="img-fluid mb-4" />
                    <div class="stars">
                        <i class="fas fa-star" onclick="selectStar(this)"></i>
                        <i class="fas fa-star" onclick="selectStar(this)"></i>
                        <i class="fas fa-star" onclick="selectStar(this)"></i>
                        <i class="fas fa-star" onclick="selectStar(this)"></i>
                        <i class="fas fa-star" onclick="selectStar(this)"></i>
                    </div>
                    <div class="comment-input">
                        <textarea class="form-control w-50" placeholder="Comment..."></textarea>
                        <button class="btn btn-primary">Submit</button>
                    </div>
                </div>
            </div>
        }

        <!-- Action Buttons (Visible only to specific user roles) -->
        @if (!string.IsNullOrEmpty(userRole))
        {
            <div class="d-flex justify-content-center mt-4">
                @if (userRole == "1" && Model.CourseStatus == 1)
                {
                    <form asp-action="ChangeStatus" method="post">
                        <input type="hidden" name="courseId" value="@Model.CourseId" />
                        <input type="hidden" name="status" value="2" />
                        <button class="btn btn-approve me-2">Approve</button>
                    </form>
                    <form asp-action="ChangeStatus" method="post">
                        <input type="hidden" name="courseId" value="@Model.CourseId" />
                        <input type="hidden" name="status" value="0" />
                        <button class="btn btn-reject">Reject</button>
                    </form>
                }
                @if (userRole == "2" && Model.CourseStatus == 3)
                {
                    <button id="requestToAdminBtn" class="btn btn-request ms-2" onclick="requestToAdmin('@Model.CourseId')">Request to Admin</button>
                }
                @if (userRole == "2" && Model.CourseStatus == 0)
                {
                    <form asp-action="DeleteCourse" method="post" onsubmit="return confirmDelete();" class="ms-2">
                        <button type="submit" class="btn btn-delete">Delete</button>
                    </form>
                }
            </div>
        }

        <!-- Admin Request Message -->
        <div id="adminRequestMessage" class="d-flex justify-content-center text-center mt-2 d-inline-block"></div>

    </div>

    @await Html.PartialAsync("~/Views/Shared/Footer/_Footer.cshtml")

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/js/Course/CourseDetail.js"></script>
    <script>
        function setCourseCookieAndRedirect(courseId) {
            document.cookie = `CourseId=${courseId}; path=/;`;
            window.location.href = '@Url.Action("ViewLessonLearner", "Lesson")';
        }

        function confirmEnroll() {
            if (confirm("Are you sure you want to enroll in this course?")) {
                document.getElementById("enrollForm").submit();
            }
        }

        function confirmDelete() {
            return confirm("Are you sure you want to delete this course?");
        }

        function requestToAdmin(courseId) {
            if (confirm("Are you sure you want to request approval from admin?")) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("RequestToAdmin", "Course")",
                    data: { courseId: courseId },
                    success: function (response) {
                        let adminRequestMessage = document.getElementById("adminRequestMessage");
                        if (response.success) {
                            adminRequestMessage.innerHTML = `<div class="alert alert-success d-inline-block">${response.message}</div>`;
                            document.getElementById("requestToAdminBtn").disabled = true;
                        } else {
                            adminRequestMessage.innerHTML = `<div class="alert alert-danger d-inline-block">${response.message}</div>`;
                        }
                    },
                    error: function () {
                        document.getElementById("adminRequestMessage").innerHTML = `<div class="alert alert-danger d-inline-block">An error occurred while sending the request.</div>`;
                    }
                });
            }
        }

        var isLoggedIn = '@ViewBag.IsLoggedIn' === 'True';
        var message = '@ViewBag.Message';

        if (!isLoggedIn && message) {
            alert(message);
        }

        function selectStar(element) {
            // Implement star rating selection logic
        }
    </script>
</body>
</html>
