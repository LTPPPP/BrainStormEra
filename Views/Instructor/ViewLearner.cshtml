@model Dictionary<string, (string CourseName, List<BrainStormEra.Models.Account> Learners)>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Learners by Course</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/Profile/InstructorProfile.css">
    <link rel="stylesheet" href="~/css/HomePage/landing_page.css">
    <link rel="stylesheet" href="~/css/base.css">
</head>
<body>

    @await Html.PartialAsync("~/Views/Shared/Instructor/Header/_Header.cshtml")

    <main class="container">
        <h2>Learners by Course</h2>

        @foreach (var course in Model)
        {
            <div class="course-container">
                <div class="course-header" onclick="toggleLearnersList('learners-@course.Key')">
                    Course: @course.Value.CourseName
                </div>
                <div id="learners-@course.Key" class="learners-list">
                    @foreach (var learner in course.Value.Learners)
                    {
                        <div class="learner-item" onclick="showLearnerDetails('@learner.UserId')">
                            @(string.IsNullOrEmpty(learner.FullName) ? "Unnamed" : learner.FullName)
                        </div>
                    }
                </div>
            </div>
        }
    </main>

    <!-- Modal for Learner Details -->
    <div id="learnerDetailsModal" class="custom-modal-overlay" onclick="hideModal(event)">
        <div class="custom-modal-content">
            <div class="custom-modal-header">
                <h5>Learner Information</h5>
                <button type="button" class="custom-close-btn" onclick="closeLearnerDetails()">×</button>
            </div>
            <div class="custom-modal-body">
                <img id="learnerPicture" src="" alt="Learner Picture">
                <p><strong>Username:</strong> <span id="modalUsername"></span></p>
                <p><strong>Full Name:</strong> <span id="modalFullName"></span></p>
                <p><strong>Email:</strong> <span id="modalEmail"></span></p>
                <p><strong>Phone:</strong> <span id="modalPhone"></span></p>
                <p><strong>Date of Birth:</strong> <span id="modalDOB"></span></p>
                <p><strong>Gender:</strong> <span id="modalGender"></span></p>
                <p><strong>Address:</strong> <span id="modalAddress"></span></p>
            </div>
        </div>
    </div>

    <script>
        function toggleLearnersList(id) {
            const list = document.getElementById(id);
            list.style.display = list.style.display === 'none' ? 'block' : 'none';
        }

        function showLearnerDetails(userId) {
            fetch(`/api/users/${userId}`)
                .then(response => response.json())
                .then(data => {
                    const fullName = data.fullName && data.fullName !== "NULL" ? data.fullName : "Unnamed";
                    document.getElementById('modalUsername').textContent = data.username || 'N/A';
                    document.getElementById('modalFullName').textContent = fullName;
                    document.getElementById('modalEmail').textContent = data.userEmail || 'N/A';
                    document.getElementById('modalPhone').textContent = data.phoneNumber || 'N/A';
                    document.getElementById('modalDOB').textContent = data.dateOfBirth || 'N/A';
                    document.getElementById('modalGender').textContent = data.gender || 'N/A';
                    document.getElementById('modalAddress').textContent = data.userAddress || 'N/A';
                    document.getElementById('learnerPicture').src = data.userPicture || '/path/to/default-image.jpg';

                    const modal = document.getElementById('learnerDetailsModal');
                    modal.style.display = 'flex';
                    modal.style.opacity = 1;
                })
                .catch(error => console.error('Error fetching learner details:', error));
        }

        function closeLearnerDetails() {
            const modal = document.getElementById('learnerDetailsModal');
            modal.style.opacity = 0;
            setTimeout(() => {
                modal.style.display = 'none';
            }, 300);
        }

        function hideModal(event) {
            if (event.target.id === 'learnerDetailsModal') {
                closeLearnerDetails();
            }
        }
    </script>

    @await Html.PartialAsync("~/Views/Shared/Footer/_Footer.cshtml")
</body>
</html>
